{"version":3,"sources":["webpack:///./node_modules/@narative/gatsby-theme-novela/src/components/Bio/Bio.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Hero.tsx","webpack:///./src/@narative/gatsby-theme-novela/templates/articles.template.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/components/Navigation/Navigation.Paginator.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.List.tsx"],"names":["Bio","author","BioContainer","BioAvatar","as","authorsPage","Link","to","slug","data-a11y","aria-label","BioAvatarInner","RoundedImage","src","avatar","medium","BioText","dangerouslySetInnerHTML","__html","bio","p","theme","colors","accent","Image","grey","ArticlesHero","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","site","edges","node","siteMetadata","tilesIsActive","featuredAuthor","find","featured","Error","Section","relative","id","HeadingContainer","style","maxWidth","HeroHeading","heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","title","Tiles","Rows","mediaqueries","desktop","tablet","phablet","primary","hover","ArticlesPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","ArticlesPaginator","show","pageCount","gradient","colorModeTransition","Paginator","maxPages","count","props","current","index","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","rel","href","Frame","PageButton","getPageLinks","MobileReference","aria-hidden","previousPage","pagesRange","range","truncatedRange","slice","unshift","splice","length","push","Set","map","page","i","Spacer","key","PageNumberBUtton","opacity","className","Component","paginationItemMixin","css","desktop_up","ArticlesList","alwaysShowAllDetails","hasOnlyOneArticle","getGridLayout","articlePairs","reduce","result","value","array","useEffect","ArticlesListContainer","ap","isEven","isOdd","List","reverse","ListItem","article","hasOverflow","imageSource","regular","hasHeroImage","Object","keys","constructor","ArticleLink","Item","ImageContainer","Title","dark","Excerpt","excerpt","MetaData","date","timeToRead","limitToTwoLines","showDetails","listTile","wide","desktop_medium","listItemRow","card","listItemTile","listRow","Headings","h2","fonts","serif"],"mappings":"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","file":"component---node-modules-narative-gatsby-theme-novela-src-templates-articles-template-tsx-f12372941ad642872134.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Image from '@components/Image';\nimport { IAuthor } from '@types';\n\nconst Bio: React.FC<IAuthor> = ({ author }) => {\n  return (\n    <BioContainer>\n      <BioAvatar\n        as={author.authorsPage ? Link : 'div'}\n        to={author.slug}\n        data-a11y=\"false\"\n        aria-label=\"Author's bio\"\n      >\n        <BioAvatarInner>\n          <RoundedImage src={author.avatar.medium} />\n        </BioAvatarInner>\n      </BioAvatar>\n      <BioText dangerouslySetInnerHTML={{ __html: author.bio }} />\n    </BioContainer>\n  );\n};\n\nexport default Bio;\n\nconst BioContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  left: -10px;\n`;\n\nconst BioAvatar = styled.div`\n  display: block;\n  position: relative;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  margin: 10px 26px 10px 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nconst RoundedImage = styled(Image)`\n  border-radius: 50%;\n`;\n\nconst BioAvatarInner = styled.div`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  overflow: hidden;\n`;\n\nconst BioText = styled.p`\n  max-width: 430px;\n  font-size: 14px;\n  line-height: 1.45;\n  color: ${p => p.theme.colors.grey};\n\n  a {\n    color: ${p => p.theme.colors.grey};\n    text-decoration: underline;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IAuthor } from '@types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArticlesHero: React.FC<IAuthor> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  const featuredAuthor = authors.find(author => author.featured);\n\n  if (!featuredAuthor) {\n    throw new Error(`\n      No featured Author found.\n      Please ensure you have at least featured Author.\n  `);\n  }\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\n      </HeadingContainer>\n      <SubheadingContainer>\n        <Bio author={featuredAuthor} />\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default ArticlesHero;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@narative/gatsby-theme-novela/src/components/Section\";\nimport SEO from \"@narative/gatsby-theme-novela/src/components/SEO\";\nimport Layout from \"@narative/gatsby-theme-novela/src/components/Layout\";\nimport Paginator from \"@narative/gatsby-theme-novela/src/components/Navigation/Navigation.Paginator\";\n\nimport ArticlesHero from \"@narative/gatsby-theme-novela/src/sections/articles/Articles.Hero\";\nimport ArticlesList from \"@narative/gatsby-theme-novela/src/sections/articles/Articles.List\";\n\nfunction ArticlesPage({ location, pageContext }) {\n  const articles = pageContext.group;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <ArticlesHero authors={authors} />\n      <Section narrow>\n        <ArticlesList articles={articles} />\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n      {/* <ArticlesGradient /> */}\n    </Layout>\n  );\n}\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n","import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport mediaqueries from \"@styles/media\";\nimport { range } from \"@utils\";\n\nimport { IPaginator } from \"@types\";\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n  count = this.props.pageCount;\n  current = this.props.index;\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const current = this.current;\n    const count = this.count;\n    const maxPages = this.maxPages;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(\n        pagesRange.length - 1 - maxPages,\n        0,\n        pagesRange[0] - 1,\n      );\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden={true} />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === \"/\") {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"page/\" + n;\n    } else {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"/page/\" + n;\n    }\n  };\n\n  render() {\n    const count = this.count;\n    const current = this.current;\n\n    if (count <= 1) return null;\n\n    const previousPath = this.previousPath;\n    const nextPath = this.nextPath;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n\nconst paginationItemMixin = p => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: \"...\";\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.primary};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n","import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nimport Headings from '@components/Headings';\nimport Image, { ImagePlaceholder } from '@components/Image';\n\nimport mediaqueries from '@styles/media';\nimport { IArticle } from '@types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ArticlesListProps {\n  articles: IArticle[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ArticlesListItemProps {\n  article: IArticle;\n  narrow?: boolean;\n}\n\nconst ArticlesList: React.FC<ArticlesListProps> = ({\n  articles,\n  alwaysShowAllDetails,\n}) => {\n  if (!articles) return null;\n\n  const hasOnlyOneArticle = articles.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  /**\n   * We're taking the flat array of articles [{}, {}, {}...]\n   * and turning it into an array of pairs of articles [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  const articlePairs = articles.reduce((result, value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ArticlesListContainer\n      style={{ opacity: hasSetGridLayout ? 1 : 0 }}\n      alwaysShowAllDetails={alwaysShowAllDetails}\n    >\n      {articlePairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        return (\n          <List\n            key={index}\n            gridLayout={gridLayout}\n            hasOnlyOneArticle={hasOnlyOneArticle}\n            reverse={isEven}\n          >\n            <ListItem article={ap[0]} narrow={isEven} />\n            <ListItem article={ap[1]} narrow={isOdd} />\n          </List>\n        );\n      })}\n    </ArticlesListContainer>\n  );\n};\n\nexport default ArticlesList;\n\nconst ListItem: React.FC<ArticlesListItemProps> = ({ article, narrow }) => {\n  if (!article) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow ? article.hero.narrow : article.hero.regular;\n  const hasHeroImage =\n    imageSource &&\n    Object.keys(imageSource).length !== 0 &&\n    imageSource.constructor === Object;\n\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.title}\n          </Title>\n          <Excerpt\n            narrow={narrow}\n            hasOverflow={hasOverflow}\n            gridLayout={gridLayout}\n          >\n            {article.excerpt}\n          </Excerpt>\n          <MetaData>\n            {article.date} · {article.timeToRead} min read\n          </MetaData>\n        </div>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst wide = '1fr';\nconst narrow = '457px';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ArticlesListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\nconst listTile = p => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p.reverse\n    ? `${narrow} ${wide}`\n    : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    \n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n  `}\n`;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst listItemTile = p => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\n// If only 1 article, dont create 2 rows.\nconst listRow = p => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneArticle ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneArticle: boolean;\n}>`\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '280px' : '220px')};\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad),\n    box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p =>\n    p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px'};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  hasOverflow: boolean;\n  narrow: boolean;\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box')};\n  max-width: ${p => (p.narrow ? '415px' : '515px')};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom; 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27),\n      0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n"],"sourceRoot":""}